// database schema:
// mostly for documentation, since this is now shared between the portal and
// the slice-daemon.py script
// table is gee_master
// general command to connect is
// mongo --host <hostname> --port <port>
// for us, <hostname> is typically mongodb, and
// <port> is 27017 -- the default, omittable.

// users: {email [String], admin [a boolean]}
// email is a unique index for both the collections users and user_requests in
// mongo (done from the command line) so we don't have to worry about duplicate entries
{"users": {
    "email": "String",
    "admin": {
        "type": "Boolean",
        "default": false
    }
},
// slices: {name, allocated, expires, tarfile, imageName}
// name is just the slice name
// user is the email of the user who owns the slice (null if not allocated)
// expires is the date on which the slice expires
// tarfile is the name of slice file
// imageName: is the name of the docker file
// NOT SHOWN (and may need to be fixed).  Has an autoincrement COUNT field
// implemented by a Mongoose plugin -- how do we get it from Mongo?
"slices": {
  "user": {
    "type": "String",
    "default": null // no user for this slice
  },
  "expires": {
    "type": "Date"
  },
  "ports": {
    "type": [
      "host":"String",
      "container": "String"
    ],
    "default": []
  },
  "imageName": "String",
  "tarfile": "String",
  "status": "String"
},


//
// slice requests: {action, user, sliceName, imageName}
// action: create or delete
// user: user to do it for
// sliceName: name to give the script
// imageName: is the name of the docker file.  Used only for create requests
// read by slice-daemon.py, so any change here must be accompanied by a change
// there
//
"slice_requests": {
    "action": {
        "type": "String",
        "default": "delete"
    },
    "user": {
        "type": "String",
        "default": null
    },
    "sliceName": {
        "type":"String"
    },
    "imageName": "String",
    "ports": {
      "type": [{
        "host":"String",
        "container": "String"
      }],
      "default": []
    }
},
//
// images: {name}
// name: String
// names of images which can be instantiated on GEE
"images": {
   "name": "String"
},
// Special slice requests -- requests for slices
// that have been made by users but not acted upon
// by administrators.  These involve open ports,
// images not in the database, or both
// user: email of user requesting special slice
// imageName: text string with the image the user is requesting.
//            The default should be in config.json, and specified there.
// ports: port mappings the user is requesting.  should be in the form x:y,
//        where x is the host port and y is the container port
"special_slice_requests": {
    "user": {
        "type": "String",
        "default": null
    },
    "imageName": {
        "type": "String",
        "default": null
    },
    "ports": {
      "type": [{
        "host":"String",
        "container": "String"
      }],
      "default": []
    }

},
// Logging Documents.  These are not used for operations by the GEE Portal, but
// are used for forensic purposes -- primarily, so administrators can find out
// what the various tools have done
// A slice creation record
"slice_create_records": {
    "user": "String",
    "imageName": "String",
    "ports": {
        "type": [{
            "host":"String",
            "container":"String"
        }]
    },
    "sliceName": "String",
    "sliceNum": "String",
    "expires": {
      "type": "Date"
    },
    "date": {
      "type": "Date"
    }
},
// A slice deletion record
"slice_delete_records": {
    "date": {
      "type": "Date"
  },
  "sliceName": "String"
},
// A slice renewal record
"slice_renew_records": {
    "date": {
      "type": "Date"
  },
  "new_expiration": {
      "type": "Date"
  },
  "sliceName": "String",
  "sliceNum": "String"
},

// A node record.  These are the nodes in PlanetIgnite
"nodes" : {
    // date added
    "date" : {
        "type": "Date"
    },
    "ipAddress": "String",
    "siteName": "String",  // name of the site, e.g. 'washington'
    "dnsName": "String",   // something.planet-ignite.net (e.g., 'washington.gee-project.net')
    "sshNickname": "String", // for ansible and ssh -- e.g., 'ig-washington'
    "permanent": "Boolean",  // only true for nodes which should persist -- all added nodes have this as False
    "status": {
        "up": "Boolean", // Is the node up or down?  Will be replaced by a more  sophisticated interface
        "date": {
          "type": "Date"
        }
    }

},
}
